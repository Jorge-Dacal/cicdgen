:toc: macro

ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

toc::[]
:idprefix:
:idseparator: -
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Devon4ng Docker related files

When you generate the files for a devon4ng you can also pass the option `--docker`. When you do that it will generate also some extra files related to docker.

NOTE: If you pass the `--docker` option the option `--plurl` is also required. It will be used to upload the images to the Nexus3 inside Production Line. Example: if your PL url is `test.s2-eu.capgemini.com` you should execute the command in this way: `cicdgen generate devon4ng --groupid com.devonfw --docker --plurl test.s2-eu.capgemini.com`, and it will use docker-registry-test.s2-eu.capgemini.com as docker registry.

=== Files

* .dockerignore
  
  In this files are defined the folders that will not be copied to the docker image. Fore more information read the link:https://docs.docker.com/engine/reference/builder/#dockerignore-file[official documentation].

* Dockerfile
+
This file contains the instructions to create a docker image for you project.
+
.Source
[source,Dockerfile]
----
# 1. Build
FROM node:lts AS build
WORKDIR /app
COPY . /app
RUN npm i -g yarn
RUN yarn
RUN yarn build --configuration=docker

# 2. Deploy
FROM nginx:latest

COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=build /app/dist/. /usr/share/nginx/html

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]
----
+
This is a multi-stage build. First, it use a node image in order to compile the source code, then it will use a nginx image as a web server for our devon4ng application. With the multi-stage build we avoid everything related to node.js in our final image, where we only have a nginx with our application compiled.
+
You can use this Dockerfile for development purposes.

* Dockerfile.ci
+
This file contains the instructions to create a docker image for you project. The main difference with the Dockerfile is that this file will be used in the Jenkins pipeline.
+
